#def num(a, b):
#    sum = a + b
#    return sum
#
#result = num(3, 4)
#print(result)

#ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

#def num(n):
#    for i in range(n):
#        print(i, "#################")

#num(6)

#ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

#def print_root(a, b, c):
#    r1 = (-b + (b ** 2 - 4 * a * c)) / 2 * a
#    r2 = (-b - (b ** 2 - 4 * a * c)) / 2 * a
#    print("해는 {} 혹은 {}".format(r1, r2))

#print_root(1, 3, 5)

#ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

#def print_star(n = 1): # 매개변수 n은 디폴트값 1을 가짐
#    for _ in range(n):
#        print ('*******************')

#print_star() # 인자가 없어도 에러 없이 수행됨

# !주의! : 디폴트 매개변수는 전체 변수에 대해 모두 할당하거나 매개변수가 2개 이상 시 출현 순서상 뒤에 있는 변수부터 할당해야함

#ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

# 가변인자에 대한 설명

# "*변수명" 은 함수에 여러 개의 위치 인자를 전달할 수 있게 해줍니다. 변수명은 튜플 형태로 전달되며, 함수 내에서 이를 순회하거나 인덱스를 통해 접근할 수 있습니다. 보통 이 기능은 인자의 개수가 불명확한 경우에 사용됩니다.

# "**변수명" 은 함수에 여러 개의 키워드 인자를 전달할 수 있게 해줍니다. 변수명은 사전 형태로 전달되며, 함수 내에서 이를 순회하거나 키를 통해 접근할 수 있습니다. 보통 이 기능은 인자의 이름과 개수가 불명확한 경우에 사용됩니다.



#미완

# a = int(input("합계와 평균을 구할 수들을 입력하시오: "))

# def num(*numbers):
    
#     count = 0

#     for i in numbers:
#         count += i

#     total = sum(numbers)
#     count = len(numbers)
#     result = total / count
#     return  count, result

# print("{}의 합{}, 평균{}".format(a, total, result))




# or

# print(num(1, 4, 6, 8, 9))

#ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

# 248p

#{:<nd}: 왼쪽정렬
#{:>nd}: 오른쪽 정렬
#{:nf}: 소숫점 f자리까지 출력
#{:ns}: 문자열 s자리까지 출력

# for i in range(2, 15, 2):
#     print("{0:<3d} {1:<4d}{2:<5d}".format(i, i*i, i*i*i))

#ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

# type() = 객체의 class를 반환함
# int() = 정수 데이터 타입
# float() = 소수점이 있는 숫자를 나타내는 데이터
# str() = 문자열을 나타내는 데이터


# type(123)
# 출력: class 'int'

# type('Hello string!')
# 출력: class 'str'

# int("100") + 1
# 출력: 101

# float("100") + 1
# 출력: 101.0

# "100" + str(1)
# 출력: 1001

# abs(-100)  # 절대값 함수: -100의 절대값을 반환합니다 (결과: 100)

# min(200, 100, 300, 400)  # 최솟값 함수: 인수 중 최솟값을 반환합니다 (결과: 100)

# str1 = "FOO"  # 문자열 변수 선언: str1에 "FOO"라는 문자열을 저장합니다
# len(str1)  # 길이 함수: 문자열 str1의 길이를 반환합니다 (결과: 3)

# eval("100+200+300")  # eval 함수: 문자열 내의 수식을 계산하여 결과를 반환합니다 (결과: 600)

# sorted("EABCD")  # 정렬 함수: 문자열의 문자들을 정렬한 후 리스트로 반환합니다 (결과: ['A', 'B', 'C', 'D', 'E'])

# list = [200, 100, 300, 400]  # 리스트 선언: list 변수에 숫자들을 저장합니다
# sorted(list)  # 정렬 함수: 리스트의 원소들을 오름차순으로 정렬한 후 반환합니다 (결과: [100, 200, 300, 400])

# sorted(list, reverse = True)  # 정렬 함수: 리스트의 원소들을 내림차순으로 정렬한 후 반환합니다 (결과: [400, 300, 200, 100])

#ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

# eval("10 + 20") # 10 + 20 문장을 파이썬 번역기가 수행함
# eval("(5 * 20) / 2") # (5 * 20) / 2 문장을 파이썬 번역기가 수행함

# chr(65) # 유니코드 값 65는 알파벳 'A'이며, chr() 함수는 이를 반환함

# ord("A") # 알파벳 'A'의 유니코드 값 65를 반환함
